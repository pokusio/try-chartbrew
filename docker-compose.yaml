# ---
# see : https://github.com/chartbrew/chartbrew#quickstart
version: '3.9'

# Settings and configurations that are common for all containers
x-chartbrew-common: &chartbrew-common
  image: razvanilin/chartbrew
  # command: npm start
  restart: unless-stopped
  expose:
    - "0.0.0.0:4019:4019"
    - "0.0.0.0:4018:4018"
  environment:
    CB_SECRET: "enter_a_secure_string_youre_proudof"
    CB_API_HOST: "0.0.0.0"
    CB_API_PORT: "4019"
    CB_DB_HOST: "host.docker.internal"
    CB_DB_PORT: "3306"
    CB_DB_NAME: "chartbrew"
    CB_DB_USERNAME: "chartbrewuser"
    CB_DB_PASSWORD: "chartbrewpwd"
    REACT_APP_CLIENT_HOST: "http://localhost:4018"
    REACT_APP_API_HOST: "http://localhost:4019"
  # healthcheck:
    # test: ["CMD", "curl", "-f", "http://localhost:9000/chartbrew/health/live"]
    # interval: 30s
    # timeout: 20s
    # retries: 3

# starts 4 docker containers running chartbrew server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:

  chartbrew1:
    <<: *chartbrew-common
    hostname: chartbrew1
    # volumes:
      # - data1-1:/data1
      # - data1-2:/data2
    depends_on:
      - chartbrew_db
  chartbrew_db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - chartbrew1
      # - chartbrew2
      # - chartbrew3
      # - chartbrew4

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  chartbrew-db:
  # data1-1:
  # data1-2:
  # data2-1:
  # data2-2:
  # data3-1:
  # data3-2:
  # data4-1:
  # data4-2:
